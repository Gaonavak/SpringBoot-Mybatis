{
  "author" : "makejava",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "G_MybatisPlus",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "G_MybatisPlus" : {
      "name" : "G_MybatisPlus",
      "elementList" : [ {
        "name" : "entity.java.vm",
        "code" : "## ===== 导入宏定义 =====\n$!{define.vm}\n\n## ===== 保存路径 =====\n#save(\"/dao/entity\", \".java\")\n\n## ===== 包路径 =====\n#setPackageSuffix(\"dao.entity\")\n\n## ===== 自动导包 =====\n$!{autoImport.vm}\nimport com.baomidou.mybatisplus.annotation.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n## ===== 类注释 =====\n#tableComment(\"表实体类\")\n@TableName(value = \"$!{tableInfo.obj.name}\")\n@Data\n@Builder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class $!{tableInfo.name} {\n\n#foreach($column in $tableInfo.fullColumn)\n\n    ## 主键字段\n    #if($column.primaryKey)\n    @TableId(type = IdType.AUTO)\n    #else\n    @TableField(\"$!{column.obj.name}\")\n    #end\n\n    ## 创建时间自动填充\n    #if($column.name.equalsIgnoreCase(\"create_time\"))\n    @TableField(fill = FieldFill.INSERT)\n    #end\n\n    ## 更新时间自动填充\n    #if($column.name.equalsIgnoreCase(\"update_time\"))\n    @TableField(fill = FieldFill.INSERT_UPDATE)\n    #end\n\n    ## 乐观锁字段\n    #if($column.name.equalsIgnoreCase(\"version\"))\n    @Version\n    #end\n\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n\n#end\n\n}\n"
      }, {
        "name" : "controller.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Controller\")\n\n##保存文件（宏定义）\n#save(\"/controller\", \"Controller.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"controller\")\n\n##定义服务名\n#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \"Service\"))\n\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\nimport org.springframework.web.bind.annotation.*;\n\n##表注释（宏定义）\n#tableComment(\"表控制层\")\n@RestController\n@RequestMapping(\"/$!tool.firstLowerCase($!tableInfo.name)\")\npublic class $!{tableName} {\n\n}\n"
      }, {
        "name" : "mapper.java.vm",
        "code" : "## ===== 导入宏定义 =====\n$!{define.vm}\n\n## ===== 保存路径 =====\n#save(\"/mapper\", \"Mapper.java\")\n\n## ===== 包路径 =====\n#setPackageSuffix(\"mapper\")\n\n## ===== 自动导包 =====\n$!{autoImport.vm}\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\n\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Select;\nimport org.apache.ibatis.annotations.Insert;\nimport org.apache.ibatis.annotations.Update;\nimport org.apache.ibatis.annotations.Delete;\nimport org.apache.ibatis.annotations.Param;\n\nimport java.util.List;\n\n## ===== Mapper 注释 =====\n/**\n * Mapper 接口：用于执行与 $!{tableInfo.name} 相关的数据库操作\n */\n@Mapper\npublic interface $!{tableInfo.name}Mapper extends BaseMapper<$!{tableInfo.name}> {\n\n    ## ==== 基本增删改查 ====\n\n    /**\n     * 查询所有数据\n     * @return List<$!{tableInfo.name}>\n     */\n    List<$!{tableInfo.name}> selectAll();\n\n    /**\n     * 根据ID查询数据\n     * @param id 主键ID\n     * @return $!{tableInfo.name}\n     */\n    $!{tableInfo.name} selectById(Long id);\n\n    /**\n     * 插入一条新记录\n     * @param $!{tableInfo.name} 实体对象\n     * @return 插入的记录数\n     */\n    @Insert(\"INSERT INTO $!{tableInfo.obj.name} ($!{tool.joinColumnNames($tableInfo.fullColumn)}) VALUES ($!{tool.joinColumnValues($tableInfo.fullColumn)})\")\n    int insert($!{tableInfo.name} $!{tableInfo.name});\n\n    /**\n     * 更新记录\n     * @param $!{tableInfo.name} 实体对象\n     * @return 更新的记录数\n     */\n    @Update(\"UPDATE $!{tableInfo.obj.name} SET $!{tool.joinUpdateFields($tableInfo.fullColumn)} WHERE id = #{id}\")\n    int updateById($!{tableInfo.name} $!{tableInfo.name});\n\n    /**\n     * 根据ID删除记录\n     * @param id 主键ID\n     * @return 删除的记录数\n     */\n    @Delete(\"DELETE FROM $!{tableInfo.obj.name} WHERE id = #{id}\")\n    int deleteById(Long id);\n\n    ## ==== 自定义查询 ====\n\n    /**\n     * 查询符合条件的用户\n     * @param name 用户名\n     * @param age 年龄\n     * @return List<$!{tableInfo.name}>\n     */\n    List<$!{tableInfo.name}> searchUsers(@Param(\"name\") String name, @Param(\"age\") Integer age);\n\n    /**\n     * 根据ID获取用户详情\n     * @param id 用户ID\n     * @return $!{tableInfo.name}VO\n     */\n    @Select(\"SELECT * FROM $!{tableInfo.obj.name} WHERE id = #{id}\")\n    $!{tableInfo.name}VO getUserById(Long id);\n\n    /**\n     * 获取用户配置\n     * @param settings 配置项\n     * @return 用户设置\n     */\n    @Select(\"SELECT settings FROM user_settings WHERE settings_key = #{settings}\")\n    String getUserSettings(@Param(\"settings\") String settings);\n}\n"
      }, {
        "name" : "service.java.vm",
        "code" : "## 导入宏定义\n$!{define.vm}\n\n## 设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n## 保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n## 包路径（宏定义）\n#setPackageSuffix(\"service\")\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport com.baomidou.mybatisplus.core.metadata.IPage;\n\nimport java.util.List;\n\n## 表注释（宏定义）\n#tableComment(\"表服务接口\")\npublic interface $!{tableInfo.name}Service {\n\n    // 保存新实体\n    boolean save($!{tableInfo.name} entity);\n\n    // 根据 ID 删除实体\n    boolean removeById(Long id);\n\n    // 更新实体信息\n    boolean updateById($!{tableInfo.name} entity);\n\n    // 根据 ID 获取实体\n    $!{tableInfo.name} getById(Long id);\n\n    // 获取所有实体列表\n    List<$!{tableInfo.name}> list();\n\n    // 根据条件查找实体列表\n    List<$!{tableInfo.name}> findByCondition($!{tableInfo.name} condition);\n\n    // 根据条件更新实体\n    boolean updateByCondition($!{tableInfo.name} condition);\n\n    // 分页查询实体\n    IPage<$!{tableInfo.name}> paginate(int pageNum, int pageSize);\n}"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "## 导入宏定义\n$!{define.vm}\n\n## 设置表后缀（宏定义）\n#setTableSuffix(\"ServiceImpl\")\n\n## 保存文件（宏定义）\n#save(\"/service/impl\", \"ServiceImpl.java\")\n\n## 包路径（宏定义）\n#setPackageSuffix(\"service.impl\")\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service(\"$!tool.firstLowerCase($!{tableInfo.name})Service\")\npublic class $!{tableInfo.name}ServiceImpl implements $!{tableInfo.name}Service {\n\n}"
      }, {
        "name" : "dto.java.vm",
        "code" : "## ===== 导入宏定义 =====\n$!{define.vm}\n\n## ===== 保存路径 =====\n#save(\"/dao/dto\", \"DTO.java\")\n\n## ===== 包路径 =====\n#setPackageSuffix(\"dao.dto\")\n\n## ===== 自动导包 =====\n$!{autoImport.vm}\nimport lombok.Data;\n\n## ===== 类注释 =====\n#tableComment(\"DTO类\")\n@Data\npublic class $!{tableInfo.name}DTO {\n\n#foreach($column in $tableInfo.fullColumn)\n\n    ## 要保留的字段: id, name, age, email\n    #if($column.name.equalsIgnoreCase(\"id\") || \n        $column.name.equalsIgnoreCase(\"name\") ||\n        $column.name.equalsIgnoreCase(\"age\") ||\n        $column.name.equalsIgnoreCase(\"email\"))\n\n    /** $!{column.comment} */\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n\n    #end\n\n#end\n\n}\n"
      }, {
        "name" : "bo.java.vm",
        "code" : "## ===== 导入宏定义 =====\n$!{define.vm}\n\n## ===== 保存路径 =====\n#save(\"/dao/bo\", \"BO.java\")\n\n## ===== 包路径 =====\n#setPackageSuffix(\"dao.bo\")\n\n## ===== 自动导包 =====\n$!{autoImport.vm}\nimport lombok.Data;\n\n## ===== 类注释 =====\n/** \n * 业务对象：用于内部业务逻辑处理\n */\n@Data\npublic class $!{tableInfo.name}BO {\n\n#foreach($column in $tableInfo.fullColumn)\n\n    ## 将数据库字段直接映射到BO字段\n    #if($column.name.equalsIgnoreCase(\"id\") || \n        $column.name.equalsIgnoreCase(\"name\") ||\n        $column.name.equalsIgnoreCase(\"age\") ||\n        $column.name.equalsIgnoreCase(\"email\") ||\n        $column.name.equalsIgnoreCase(\"create_time\") ||\n        $column.name.equalsIgnoreCase(\"update_time\") ||\n        $column.name.equalsIgnoreCase(\"version\"))\n\n    /** $!{column.comment} */\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n\n    #end\n\n#end\n\n    ## 业务处理相关字段（示例：根据年龄判断是否成年）\n    private boolean isAdult;  // 根据 age 字段计算是否成年\n\n    ## 这里可以根据需要添加更多的业务逻辑字段，如判断是否激活、是否VIP等\n\n}\n"
      }, {
        "name" : "vo.java.vm",
        "code" : "## ===== 导入宏定义 =====\n$!{define.vm}\n\n## ===== 保存路径 =====\n#save(\"/dao/vo\", \"VO.java\")\n\n## ===== 包路径 =====\n#setPackageSuffix(\"dao.vo\")\n\n## ===== 自动导包 =====\n$!{autoImport.vm}\nimport lombok.Data;\n\n## ===== 类注释 =====\n/** \n * 视图对象：用于数据展示\n */\n@Data\npublic class $!{tableInfo.name}VO {\n\n#foreach($column in $tableInfo.fullColumn)\n    ## 判断是否需要生成字段\n    #if($column.name.equalsIgnoreCase(\"age\"))\n    private boolean isAdult; // 根据年龄计算是否成年\n    #else\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    #end\n#end\n}\n"
      }, {
        "name" : "qo.java.vm",
        "code" : "## ===== 导入宏定义 =====\n$!{define.vm}\n\n## ===== 保存路径 =====\n#save(\"/dao/qo\", \"QO.java\")\n\n## ===== 包路径 =====\n#setPackageSuffix(\"dao.qo\")\n\n## ===== 自动导包 =====\n$!{autoImport.vm}\nimport lombok.Data;\n\n## ===== 类注释 =====\n/** \n * 查询对象：用于封装查询条件\n */\n@Data\npublic class $!{tableInfo.name}QO {\n\n#foreach($column in $tableInfo.fullColumn)\n\n    ## 判断是否需要添加查询条件\n    #if($column.name.equalsIgnoreCase(\"name\"))\n    private String $!{column.name}Like;   // 对应的字段模糊查询\n    \n    #elseif($column.name.equalsIgnoreCase(\"age\"))\n    private Integer min$!{tool.upperCaseFirst($column.name)};  // 年龄下限\n    private Integer max$!{tool.upperCaseFirst($column.name)};  // 年龄上限\n    \n    #elseif($column.name.equalsIgnoreCase(\"create_time\"))\n    private Long min$!{tool.upperCaseFirst($column.name)};   // 创建时间下限\n    private Long max$!{tool.upperCaseFirst($column.name)};   // 创建时间上限\n    \n    #elseif($column.name.equalsIgnoreCase(\"update_time\"))\n    private Long min$!{tool.upperCaseFirst($column.name)};   // 更新时间下限\n    private Long max$!{tool.upperCaseFirst($column.name)};   // 更新时间上限\n    \n    #end\n\n#end\n\n    // 分页信息\n    private Integer pageNum = 1;  // 页码，默认1\n    private Integer pageSize = 10; // 每页大小，默认10\n}\n"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "## ===== 导入宏定义 =====\n$!{define.vm}\n\n## ===== 保存路径 =====\n#save(\"/mapper\", \"$!Mapper.xml\")\n\n## ===== 包路径 =====\n## #setPackageSuffix(\"mapper\")\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper\">\n\n    <select id=\"selectAll\" resultType=\"$!{tableInfo.savePackageName}.dao.entity.$!{tableInfo.name}\">\n        SELECT * FROM $!{tableInfo.obj.name}\n    </select>\n\n    <select id=\"selectById\" resultType=\"$!{tableInfo.savePackageName}.dao.entity.$!{tableInfo.name}\">\n        SELECT * FROM $!{tableInfo.obj.name} WHERE id = #{id}\n    </select>\n\n    <insert id=\"insert\" parameterType=\"$!{tableInfo.savePackageName}.dao.entity.$!{tableInfo.name}\">\n        INSERT INTO $!{tableInfo.obj.name} ($!{tool.joinColumnNames($tableInfo.fullColumn)}) \n        VALUES ($!{tool.joinColumnValues($tableInfo.fullColumn)})\n    </insert>\n\n    <update id=\"updateById\" parameterType=\"$!{tableInfo.savePackageName}.dao.entity.$!{tableInfo.name}\">\n        UPDATE $!{tableInfo.obj.name} \n        SET $!{tool.joinUpdateFields($tableInfo.fullColumn)} \n        WHERE id = #{id}\n    </update>\n\n    <delete id=\"deleteById\" parameterType=\"java.lang.Long\">\n        DELETE FROM $!{tableInfo.obj.name} WHERE id = #{id}\n    </delete>\n\n    <select id=\"searchUsers\" resultType=\"$!{tableInfo.savePackageName}.dao.entity.$!{tableInfo.name}\">\n        SELECT * FROM $!{tableInfo.obj.name}\n        WHERE name LIKE CONCAT('%', #{name}, '%') AND age = #{age}\n    </select>\n\n    <select id=\"getUserById\" resultType=\"$!{tableInfo.savePackageName}.dao.vo.$!{tableInfo.name}VO\">\n        SELECT * FROM $!{tableInfo.obj.name} WHERE id = #{id}\n    </select>\n\n    <select id=\"getUserSettings\" resultType=\"java.lang.String\">\n        SELECT settings FROM user_settings WHERE settings_key = #{settings}\n    </select>\n\n</mapper>"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}